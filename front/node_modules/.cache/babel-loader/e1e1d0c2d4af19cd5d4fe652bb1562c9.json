{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\Desktop\\\\Teste\\\\resultado\\\\src\\\\DataGrid.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataGrid = _ref => {\n  let {\n    csv\n  } = _ref;\n\n  if (!csv) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: csv.header.map(headerName => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: headerName\n        }, headerName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: csv.data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: col\n        }, col, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DataGrid;\nexport default DataGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataGrid\");","map":{"version":3,"names":["React","DataGrid","csv","header","map","headerName","data","row","index","col"],"sources":["C:/Users/carlo/Desktop/Teste/resultado/src/DataGrid.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst DataGrid = ({ csv }) => {\r\n  if (!csv) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          {csv.header.map((headerName) => (\r\n            <th key={headerName}>{headerName}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {csv.data.map((row, index) => (\r\n          <tr key={index}>\r\n            {row.map((col) => (\r\n              <td key={col}>{col}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default DataGrid;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,QAAa;EAAA,IAAZ;IAAEC;EAAF,CAAY;;EAC5B,IAAI,CAACA,GAAL,EAAU;IACR,OAAO,IAAP;EACD;;EAED,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA,UACGA,GAAG,CAACC,MAAJ,CAAWC,GAAX,CAAgBC,UAAD,iBACd;UAAA,UAAsBA;QAAtB,GAASA,UAAT;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAA,UACGH,GAAG,CAACI,IAAJ,CAASF,GAAT,CAAa,CAACG,GAAD,EAAMC,KAAN,kBACZ;QAAA,UACGD,GAAG,CAACH,GAAJ,CAASK,GAAD,iBACP;UAAA,UAAeA;QAAf,GAASA,GAAT;UAAA;UAAA;UAAA;QAAA,QADD;MADH,GAASD,KAAT;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CAzBD;;KAAMP,Q;AA2BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}